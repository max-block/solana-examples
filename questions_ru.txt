1) А может ли пользователь посмотреть исходный код смарт контракта? И как убедиться, что в блокчейне именно то, что заявлено в исходниках?

2) Можно ли перезаписывать смарт контракты?

3) Что такое BPF Loader?

4) А можем ли мы внутри нашей программы делать http запросы?

5) Сколько стоит задеплоить программу в солане?

6) Что такое compute units?

7) Как BPF Loader ограничивает код загружаемых программ от вызовов файловой системы, сети?

8) А можно ли код на солидити задеплоить в солану?

9) Как платится комиссия за хранение данных в Accounts?

10) Сколько данных можно хранить в Account? Есть ли какие-то лимиты?

11) Можно ли через JSON RPC бесплатно делать запросы, которые возвращают состояние стейта программ?

12) Как получить рандом в солане?

13) Есть ли в солане аналог Events из эфира?

14) Что такое Proof-of-History?

15) Имеет ли валидатор в солане какое-то премущество? Для арбитражных ботов, или еще чего.

16) Кто такие Archivers?

17) Когда мы деплоим программу, получается приватник для PROGRAM_ID. Что мы с ним в будущем можем делать?

18) Когда мы создаем SystemProgram.createAccountWithSeed, то кто имеет доступ к lamports: basePubkey или programId?

19) Какой в солане порядок выполнения транзакций? Есть ли возможность попать первому в блоке (аналог газовой войны в эфире)?

20) А как мы можем дать имя и тикер для токена?

21) Что такое nonce-account?

22) Могу ли я сам выбрать адрес своего смарт-контракта?

23) Разве можно обновлять программу по одному и томуже адресу? На solana-test-validator у меня это получилось

24) Мы платим за транзакцию фиксированную цену, аль за потраченные compute units?

25) Что такое Anchor фреймворк?

26) Зачем мы в lib.rs пишем
#[cfg(not(feature = "no-entrypoint"))]
pub mod entrypoint;

27) Что за Xargo.toml?

28) Что этот синтаксис значит?
counter.serialize(&mut &mut counter_info.data.borrow_mut()[..]);

29) Почему так много Vote транзакций?